version: 0.2

  #env:
  #variables:
  # key: "value"
  # key: "value"
  #parameter-store:
  # key: "value"
  # key: "value"
  #secrets-manager:
  # key: secret-id:json-key:version-stage:version-id
  # key: secret-id:json-key:version-stage:version-id
  #exported-variables:
  # - variable
  # - variable
  #git-credential-helper: yes
  #batch:
  #fast-fail: true
  #build-list:
  #build-matrix:
#build-graph:
phases:
  install:
    #Ubuntu 표준 이미지 2.0 이상을 사용하는 경우 런타임 버전을 지정해야 합니다.
    #런타임 버전을 지정하는 경우 Ubuntu 표준 이미지 2.0 이외의 이미지를 사용하면 빌드에 실패합니다.
    runtime-versions:
      java: corretto11
      # name: version
      #commands:
      # - command
      # - command
  pre_build:
    commands:
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-8)
      - echo $COMMIT_HASH
      - BUILD_TAG=${COMMIT_HASH:=latest}
      - echo $BUILD_TAG
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin 260648771995.dkr.ecr.ap-northeast-2.amazonaws.com
  build:
    commands:
      - java -version
      - echo Build started on `date`
      - chmod 755 ./gradlew;./gradlew clean build -x test
      - echo Docker Build started on `date`
      - docker build -t demo:$BUILD_TAG .
      - echo Docker Tag started on `date`
      - docker tag demo:$BUILD_TAG 260648771995.dkr.ecr.ap-northeast-2.amazonaws.com/demo
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Docker pussh to ECR on `data`
      - docker push 260648771995.dkr.ecr.ap-northeast-2.amazonaws.com/demo
      #reports:
      #report-name-or-arn:
      #files:
      # - location
      # - location
    #base-directory: location
    #discard-paths: yes
    #file-format: JunitXml | CucumberJson
    #artifacts:
    #files:
    # - location
    # - location
    #name: $(date +%Y-%m-%d)
    #discard-paths: yes
    #base-directory: location
    #cache:
    #paths:
    # - paths